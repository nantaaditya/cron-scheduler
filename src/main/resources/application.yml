server.port: ${SERVER_PORT:1000}

spring:
  application.name: cron-scheduler
  r2dbc:
    url: ${DB_URL:r2dbc:postgresql://localhost:5432/cron_db}
    username: ${DB_USER:user}
    password: ${DB_PASS:password}

logging:
  pattern.level: '%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-},%X{traceFlags}]'
  level:
    ROOT: ${APP_LOG_LEVEL:INFO}
    com.nantaaditya: DEBUG
    org.zalando.logbook: TRACE
    reactor.netty.http.client: ${WEB_CLIENT_JOB_LOG_LEVEL:DEBUG}
  file.name: logs/${LOG_NAME:cron-scheduler.log}
  logback.rollingpolicy.max-history: ${MAX_LOG_HISTORY:14}

job.configuration.web-client:
  connect-time-out: ${CONNECT_TIME_OUT:10}
  response-time-out: ${RESPONSE_TIME_OUT:10}
  read-time-out: ${READ_TIME_OUT:10}
  write-time-out: ${WRITE_TIME_OUT:10}

cron.quartz:
  instance-name: ${QUARTZ_INSTANCE_NAME:cron-scheduler}
  thread-pool-class:  ${QUARTZ_THREAD_POOL_CLASS:org.quartz.simpl.SimpleThreadPool}
  thread-name: ${QUARTZ_THREAD_NAME:cron-scheduler}
  thread-count: ${QUARTZ_THREAD_COUNT:20}
  thread-priority: ${QUARTZ_THREAD_PRIORITY:5}
  job-store-class: ${QUARTZ_JOB_STORE_CLASS:org.quartz.simpl.RAMJobStore}
  misfire-threshold: ${QUARTZ_MISFIRE_THRESHOLD:60000}

management:
  endpoints.web.exposure.include: '*'
  metrics.distribution.percentiles-histogram:
    http.server.requests: true
  tracing:
    sampling.probability: 1.0

